'use client'
import VideoSolar from '../hecongnghiep/video'

import { useState, useEffect } from 'react'
import { Tabs } from 'antd'
import { 
  BoltIcon,
  BuildingOfficeIcon,
  ChartBarIcon,
  BanknotesIcon,
  Square3Stack3DIcon,
  Battery100Icon,
  ArrowTrendingUpIcon,
  WrenchScrewdriverIcon,
  Cog6ToothIcon,
  FireIcon,
  ClockIcon,
  SparklesIcon,
  CheckCircleIcon,
} from '@heroicons/react/20/solid'
import type { TabsProps } from 'antd'
import { Swiper, SwiperSlide } from 'swiper/react'
import { Pagination, FreeMode, Autoplay } from 'swiper/modules'
import 'swiper/css'
import 'swiper/css/pagination'
import 'swiper/css/free-mode'

const frequencies = [
  { value: 'ongrid', label: 'H·ªá B√°m T·∫£i', priceSuffix: 'ƒë' },
  { value: 'hybrid', label: 'H·ªá Hybrid', priceSuffix: 'ƒë' },
] as const

const ongridTiers = [
  {
    name: '22 kW',
    id: 'tier-22',
    href: '#',
    price: '172.000.180',
    hoiVon: 'Ho√†n v·ªën: 36 th√°ng',
    hieuQua: 'Hi·ªáu qu·∫£/th√°ng: 4.830.000ƒë',
    description: 'On-Grid | 3 pha | JA Solar 36 t·∫•m | Sungrow 22kW',
    features: [
      'C√¥ng su·∫•t: 22 kWp',
      'S·ªë l∆∞·ª£ng t·∫•m pin: 36 t·∫•m',
      'S·∫£n l∆∞·ª£ng: 1.900-2.300 kWh/th√°ng'
    ],
    mostPopular: false,
  },
  {
    name: '33 kW',
    id: 'tier-33',
    href: '#',
    price: '246.000.700',
    hoiVon: 'Ho√†n v·ªën: 34 th√°ng',
    hieuQua: 'Hi·ªáu qu·∫£/th√°ng: 7.245.000ƒë',
    description: 'On-Grid | 3 pha | JA Solar 54 t·∫•m | Sungrow 33kW',
    features: [
      'C√¥ng su·∫•t: 33 kWp',
      'S·ªë l∆∞·ª£ng t·∫•m pin: 54 t·∫•m',
      'S·∫£n l∆∞·ª£ng: 2.900-3.400 kWh/th√°ng'
    ],
    mostPopular: false,
  },
  {
    name: '45 kW',
    id: 'tier-45',
    href: '#',
    price: '318.802.000',
    hoiVon: 'Ho√†n v·ªën: 32 th√°ng',
    hieuQua: 'Hi·ªáu qu·∫£/th√°ng: 10.005.000ƒë',
    description: 'On-Grid | 3 pha | JA Solar 74 t·∫•m | Sungrow 45kW',
    features: [
      'C√¥ng su·∫•t: 45 kWp',
      'S·ªë l∆∞·ª£ng t·∫•m pin: 74 t·∫•m',
      'S·∫£n l∆∞·ª£ng: 4.000-4.700 kWh/th√°ng'
    ],
    mostPopular: true,
  },
  {
    name: '66 kW',
    id: 'tier-66',
    href: '#',
    price: '461.000.100',
    hoiVon: 'Ho√†n v·ªën: 32 th√°ng',
    hieuQua: 'Hi·ªáu qu·∫£/th√°ng: 14.720.000ƒë',
    description: 'On-Grid | 3 pha | JA Solar 108 t·∫•m | Sungrow 66kW',
    features: [
      'C√¥ng su·∫•t: 66 kWp',
      'S·ªë l∆∞·ª£ng t·∫•m pin: 108 t·∫•m',
      'S·∫£n l∆∞·ª£ng: 5.900-6.900 kWh/th√°ng'
    ],
    mostPopular: false,
  },
]

const hybridTiers = [
  {
    name: '22 kW',
    id: 'tier-22',
    href: '#',
    price: '272.000.300',
    hoiVon: 'Ho√†n v·ªën: 49 th√°ng',
    hieuQua: 'Hi·ªáu qu·∫£/th√°ng: 5.635.000ƒë',
    description: 'Hybrid | 3 pha | JA Solar 36 t·∫•m | Sungrow 22kW | Pin EASYWAY',
    features: [
      'C√¥ng su·∫•t: 22 kWp',
      'S·ªë l∆∞·ª£ng t·∫•m pin: 36 t·∫•m',
      'S·∫£n l∆∞·ª£ng: 2.300-2.600 kWh/th√°ng',
      'Pin l∆∞u tr·ªØ: 10,65 kWh'
    ],
    mostPopular: false,
  },
  {
    name: '33 kW',
    id: 'tier-33',
    href: '#',
    price: '345.500.100',
    hoiVon: 'Ho√†n v·ªën: 42 th√°ng',
    hieuQua: 'Hi·ªáu qu·∫£/th√°ng: 8.395.000ƒë',
    description: 'Hybrid | 3 pha | JA Solar 54 t·∫•m | Sungrow 33kW | Pin EASYWAY',
    features: [
      'C√¥ng su·∫•t: 33 kWp',
      'S·ªë l∆∞·ª£ng t·∫•m pin: 54 t·∫•m',
      'S·∫£n l∆∞·ª£ng: 3.400-3.900 kWh/th√°ng',
      'Pin l∆∞u tr·ªØ: 10,65 kWh'
    ],
    mostPopular: false,
  },
  {
    name: '45 kW',
    id: 'tier-45',
    href: '#',
    price: '529.510.300',
    hoiVon: 'Ho√†n v·ªën: 46 th√°ng',
    hieuQua: 'Hi·ªáu qu·∫£/th√°ng: 11.615.000ƒë',
    description: 'Hybrid | 3 pha | JA Solar 74 t·∫•m | Sungrow 45kW | Pin EASYWAY',
    features: [
      'C√¥ng su·∫•t: 45 kWp',
      'S·ªë l∆∞·ª£ng t·∫•m pin: 74 t·∫•m',
      'S·∫£n l∆∞·ª£ng: 4.700-5.400 kWh/th√°ng',
      'Pin l∆∞u tr·ªØ: 15,36 kWh'
    ],
    mostPopular: true,
  },
  {
    name: '66 kW',
    id: 'tier-66',
    href: '#',
    price: '681.208.000',
    hoiVon: 'Ho√†n v·ªën: 41 th√°ng',
    hieuQua: 'Hi·ªáu qu·∫£/th√°ng: 17.020.000ƒë',
    description: 'Hybrid | 3 pha | JA Solar 108 t·∫•m | Sungrow 66kW | Pin EASYWAY',
    features: [
      'C√¥ng su·∫•t: 66 kWp',
      'S·ªë l∆∞·ª£ng t·∫•m pin: 108 t·∫•m',
      'S·∫£n l∆∞·ª£ng: 6.900-7.900 kWh/th√°ng',
      'Pin l∆∞u tr·ªØ: 20,48 kWh'
    ],
    mostPopular: false,
  },
]

const descriptions = {
  ongrid: {
    title: "H·ªá th·ªëng ƒëi·ªán m·∫∑t tr·ªùi b√°m t·∫£i (On-Grid) 3 pha",
    content: "H·ªá th·ªëng ƒëi·ªán m·∫∑t tr·ªùi On-Grid cho doanh nghi·ªáp, l√† h·ªá th·ªëng v·∫≠n h√†nh k·∫øt h·ª£p gi·ªØa ngu·ªìn ƒëi·ªán m·∫∑t tr·ªùi v√† ngu·ªìn ƒëi·ªán l∆∞·ªõi, kh√¥ng bao g·ªìm Pin l∆∞u tr·ªØ. Ph√π h·ª£p v·ªõi c√°c doanh nghi·ªáp ho·∫°t ƒë·ªông ban ng√†y, c√≥ m·ª©c ti√™u th·ª• ƒëi·ªán cao.",
    image: "/images/so-do-he-thong-dien-mat-troi.png"
  },
  hybrid: {
    title: "H·ªá th·ªëng ƒëi·ªán m·∫∑t tr·ªùi ƒë·ªôc l·∫≠p (Hybrid) 3 pha √°p cao",
    content: "H·ªá th·ªëng ƒëi·ªán m·∫∑t tr·ªùi Hybrid cho doanh nghi·ªáp, c√≥ t√≠ch h·ª£p Pin l∆∞u tr·ªØ EASYWAY, cho ph√©p v·∫≠n h√†nh ƒë·ªôc l·∫≠p v·ªõi l∆∞·ªõi ƒëi·ªán. Ph√π h·ª£p v·ªõi c√°c doanh nghi·ªáp c·∫ßn ngu·ªìn ƒëi·ªán ·ªïn ƒë·ªãnh 24/7, ho·∫∑c ho·∫°t ƒë·ªông c·∫£ ban ƒë√™m.",
    image: "/images/so-do-he-thong-dien-mat-troi.png"
  }
} as const

function classNames(...classes: string[]): string {
  return classes.filter(Boolean).join(' ')
}

type Frequency = typeof frequencies[number]

export default function Example() {
  const [frequency, setFrequency] = useState<Frequency>(frequencies[0])
  const currentDate = new Date()
  const priceMonth = currentDate.toLocaleString('vi-VN', { month: 'numeric', year: 'numeric' })

  useEffect(() => {
    if (window.innerWidth > 640) {
      let isHovering = false;
      
      const cards = document.querySelectorAll('.card-container');
      cards.forEach(card => {
        card.addEventListener('mouseenter', () => {
          isHovering = true;
        });
        card.addEventListener('mouseleave', () => {
          isHovering = false;
        });
      });

      const interval = setInterval(() => {
        if (!isHovering) {
          setFrequency(current => {
            const currentIndex = frequencies.findIndex(f => f.value === current.value)
            return frequencies[(currentIndex + 1) % frequencies.length]
          })
        }
      }, 5000)

      return () => {
        clearInterval(interval);
        cards.forEach(card => {
          card.removeEventListener('mouseenter', () => {
            isHovering = true;
          });
          card.removeEventListener('mouseleave', () => {
            isHovering = false;
          });
        });
      }
    }
  }, [])

  return (
    <div className="bg-white py-2 sm:py-4 hidden md:block">
      <div className="mx-auto container px-6 lg:px-8">
        <div className="lg:flex lg:items-center lg:gap-x-8">
          <div className="mx-auto max-w-2xl lg:mx-0 lg:flex-auto">
            <h1 className="text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl">
              ƒêi·ªán M·∫∑t Tr·ªùi C√¥ng Nghi·ªáp
            </h1>
            <p className="mt-2 text-lg leading-8 text-gray-600">
              Gi·∫£i ph√°p nƒÉng l∆∞·ª£ng xanh t·ªëi ∆∞u cho doanh nghi·ªáp! V·ªõi h·ªá th·ªëng c√¥ng su·∫•t l·ªõn, ƒëi·ªán m·∫∑t tr·ªùi gi√∫p doanh nghi·ªáp:
            </p>
            <div className="mt-4 space-y-2">
              <p className="flex items-center gap-x-2 text-gray-600">
                <CheckCircleIcon className="h-5 w-5 text-green-500" />
                Ti·∫øt ki·ªám h√†ng t·ª∑ ƒë·ªìng ti·ªÅn ƒëi·ªán m·ªói nƒÉm, t·ªëi ∆∞u h√≥a chi ph√≠ v·∫≠n h√†nh
              </p>
              <p className="flex items-center gap-x-2 text-gray-600">
                <CheckCircleIcon className="h-5 w-5 text-green-500" />
                Ho√†n v·ªën ch·ªâ t·ª´ 3 nƒÉm, sinh l·ªùi b·ªÅn v·ªØng, tƒÉng t√≠nh c·∫°nh tranh
              </p>
              <p className="flex items-center gap-x-2 text-gray-600">
                <CheckCircleIcon className="h-5 w-5 text-green-500" />
                Ch·ªß ƒë·ªông ngu·ªìn ƒëi·ªán, gi·∫£m ph·ª• thu·ªôc v√†o ƒëi·ªán l∆∞·ªõi, h·∫°n ch·∫ø gi√°n ƒëo·∫°n s·∫£n xu·∫•t
              </p>
              <p className="flex items-center gap-x-2 text-gray-600">
                <CheckCircleIcon className="h-5 w-5 text-green-500" />
                Gi·∫£m ph√°t th·∫£i CO‚ÇÇ, n√¢ng cao tr√°ch nhi·ªám m√¥i tr∆∞·ªùng, ƒë√°p ·ª©ng ti√™u chu·∫©n ESG
              </p>
            </div>
            <p className="mt-4 text-base font-semibold text-green-600">
              üëâ Gi·∫£i ph√°p b·ªÅn v·ªØng - TƒÉng tr∆∞·ªüng m·∫°nh m·∫Ω - D·∫´n ƒë·∫ßu xu h∆∞·ªõng!
            </p>
          </div>
          <div className="mt-4 sm:mt-8 lg:mt-0 lg:flex-shrink-0 lg:flex-grow">
          <VideoSolar/>
          </div>
        </div>

        <div className="mt-4 sm:mt-6 flex justify-between items-center">
          <div className="flex gap-x-3">
            {frequencies.map((freq) => (
              <button
                key={freq.value}
                onClick={() => setFrequency(freq)}
                className={classNames(
                  'rounded-lg py-2 px-6 text-sm font-semibold transition-all duration-200',
                  freq.value === frequency.value
                    ? freq.value === 'ongrid'
                      ? 'bg-red-600 text-white shadow-md hover:bg-red-500'
                      : 'bg-green-600 text-white shadow-md hover:bg-green-500'
                    : 'bg-gray-100 text-gray-700 hover:bg-gray-200',
                )}
              >
                {freq.label}
              </button>
            ))}
          </div>

          <a
            href="/he-cong-nghiep"
            className="hidden sm:inline-flex items-center justify-center rounded-md bg-gray-100 px-4 py-2 text-sm font-semibold text-gray-900 hover:bg-gray-200 transition-all duration-200"
          >
            Xem t·∫•t c·∫£ s·∫£n ph·∫©m
            <span aria-hidden="true" className="ml-2">‚Üí</span>
          </a>
        </div>

        {/* Hide grid on mobile, show on larger screens */}
        <div className="hidden sm:block">
          <div className="isolate mx-auto mt-4 sm:mt-6 grid max-w-md grid-cols-2 gap-3 sm:gap-4 md:max-w-2xl lg:max-w-4xl xl:mx-0 xl:max-w-none xl:grid-cols-4">
            {(frequency.value === 'ongrid' ? ongridTiers : hybridTiers).map((tier) => (
              <div
                key={tier.id}
                className={classNames(
                  'card-container',
                  tier.mostPopular 
                    ? `ring-2 ${
                        frequency.value === 'ongrid' 
                          ? 'ring-red-600 bg-red-50' 
                          : 'ring-green-600 bg-green-50'
                      } shadow-xl relative` 
                    : `ring-1 ring-gray-200 shadow-md hover:shadow-xl transition-all duration-300 ${
                        frequency.value === 'ongrid'
                          ? 'hover:ring-red-200'
                          : 'hover:ring-green-200'
                      }`,
                  'rounded-3xl px-4 py-3 h-full flex flex-col',
                )}
              >
                {tier.mostPopular && (
                  <div className={`absolute -top-3 left-1/2 -translate-x-1/2 inline-flex items-center justify-center gap-x-1.5 rounded-full px-3 py-1 text-sm font-medium whitespace-nowrap ${
                    frequency.value === 'ongrid' ? 'bg-red-600' : 'bg-green-600'
                  } text-white`}>
                    <FireIcon className="h-4 w-4" />
                    B√°n ch·∫°y
                  </div>
                )}
                <h3
                  id={tier.id}
                  className={classNames(
                    tier.mostPopular ? frequency.value === 'ongrid' ? 'text-red-600' : 'text-green-600' : 'text-gray-900',
                    'text-base/7 font-semibold py-2 text-center'  ,
                  )}
                >
                 
                  {frequency.value === 'ongrid' ? 'H·ªá On-Grid' : 'H·ªá Hybrid'} {tier.name}
                </h3>
                <div className="mt-2 flex gap-x-2">
                  <button 
                    className={classNames(
                      'flex-1 rounded-lg px-2 py-1',
                      'flex items-center gap-x-2',
                      'transition-all duration-200',
                      frequency.value === 'ongrid' 
                        ? 'bg-red-50 hover:bg-red-100' 
                        : 'bg-green-50 hover:bg-green-100'
                    )}
                  >
                    <ClockIcon 
                      className={`h-5 w-5 ${
                        frequency.value === 'ongrid' ? 'text-red-500' : 'text-green-500'
                      }`}
                    />
                    <div className="flex flex-col items-start">
                      <span className="text-xs text-gray-500">Ho√†n v·ªën</span>
                      <p className={`text-sm font-semibold ${
                        frequency.value === 'ongrid' ? 'text-red-600' : 'text-green-600'
                      }`}>
                        {tier.hoiVon.replace('Ho√†n v·ªën: ', '')}
                      </p>
                    </div>
                  </button>
                  
                  <button 
                    className={classNames(
                      'flex-1 rounded-lg px-2 py-1',
                      'flex items-center gap-x-2',
                      'transition-all duration-200',
                      frequency.value === 'ongrid' 
                        ? 'bg-red-50 hover:bg-red-100' 
                        : 'bg-green-50 hover:bg-green-100'
                    )}
                  >
                    <SparklesIcon 
                      className={`h-5 w-5 ${
                        frequency.value === 'ongrid' ? 'text-red-500' : 'text-green-500'
                      }`}
                    />
                    <div className="flex flex-col items-start">
                      <span className="text-xs text-gray-500">Hi·ªáu qu·∫£/th√°ng</span>
                      <p className={`text-sm font-semibold ${
                        frequency.value === 'ongrid' ? 'text-red-600' : 'text-green-600'
                      }`}>
                        {tier.hieuQua.replace('Hi·ªáu qu·∫£/th√°ng: ', '')}
                      </p>
                    </div>
                  </button>
                </div>
                <p className="mt-6 flex flex-col items-center">
                  <span className="text-sm text-gray-500">Gi√° ni√™m y·∫øt T{priceMonth}</span>
                  <span className="flex items-baseline gap-x-1">
                    <span className={classNames(
                      "text-4xl font-semibold tracking-tight",
                      frequency.value === 'ongrid' ? 'text-red-600' : 'text-green-600'
                    )}>
                      {tier.price}
                    </span>
                    <span className="text-base/7 font-semibold text-gray-600">{frequency.priceSuffix}</span>
                  </span>
                </p>
                <a
                  href={tier.href}
                  aria-describedby={tier.id}
                  className={classNames(
                    tier.mostPopular
                      ? `${frequency.value === 'ongrid' 
                          ? 'bg-red-600 text-white hover:bg-red-500 hover:scale-105 hover:shadow-lg'
                          : 'bg-green-600 text-white hover:bg-green-500 hover:scale-105 hover:shadow-lg'}`
                      : `${frequency.value === 'ongrid'
                          ? 'text-red-600 ring-1 ring-red-200 hover:bg-red-50 hover:ring-red-300 hover:scale-105'
                          : 'text-green-600 ring-1 ring-green-200 hover:bg-green-50 hover:ring-green-300 hover:scale-105'}`,
                    'mt-6 block rounded-md px-3 py-2 text-center text-sm/6 font-semibold',
                    'transform transition-all duration-200 ease-in-out',
                    'focus-visible:outline-2 focus-visible:outline-offset-2',
                    frequency.value === 'ongrid' ? 'focus-visible:outline-red-600' : 'focus-visible:outline-green-600'
                  )}
                >
                  Xem chi ti·∫øt
                </a>
                <div className="flex-grow">
                  <ul role="list" className="mt-8 space-y-3 text-base/7 text-gray-600">
                    {tier.features.map((feature) => {
                      let Icon = Cog6ToothIcon // default icon
                      
                      // Ch·ªçn icon d·ª±a v√†o n·ªôi dung c·ªßa feature
                      if (feature.toLowerCase().includes('c√¥ng su·∫•t')) {
                        Icon = BoltIcon // ‚ö° C√¥ng su·∫•t
                      } else if (feature.toLowerCase().includes('h·ªá ƒëi·ªán')) {
                        Icon = BuildingOfficeIcon // üè¢ H·ªá ƒëi·ªán
                      } else if (feature.toLowerCase().includes('s·∫£n l∆∞·ª£ng')) {
                        Icon = ChartBarIcon // üìä S·∫£n l∆∞·ª£ng
                      } else if (feature.toLowerCase().includes('ho√†n v·ªën')) {
                        Icon = BanknotesIcon // üí∞ Ho√†n v·ªën
                      } else if (feature.toLowerCase().includes('di·ªán t√≠ch')) {
                        Icon = Square3Stack3DIcon // üìè Di·ªán t√≠ch
                      } else if (feature.toLowerCase().includes('pin')) {
                        Icon = Battery100Icon // üîã Pin l∆∞u tr·ªØ
                      } else if (feature.toLowerCase().includes('hi·ªáu su·∫•t')) {
                        Icon = ArrowTrendingUpIcon // üìà Hi·ªáu su·∫•t
                      } else if (feature.toLowerCase().includes('thi·∫øt b·ªã')) {
                        Icon = WrenchScrewdriverIcon // üîß Thi·∫øt b·ªã
                      }

                      return (
                        <li key={feature} className="flex gap-x-3 items-center">
                          <Icon 
                            aria-hidden="true" 
                            className={`h-5 w-5 flex-none ${frequency.value === 'ongrid' ? 'text-red-600' : 'text-green-600'}`} 
                          />
                          {feature}
                        </li>
                      )
                    })}
                  </ul>
                </div>
              </div>
            ))}
          </div>
        </div>

        {/* Show slider on mobile only */}
        <div className="sm:hidden mt-4 px-4">
          <Swiper
            modules={[FreeMode, Pagination, Autoplay]}
            spaceBetween={12}
            slidesPerView={'auto'}
            freeMode={true}
            pagination={{
              clickable: true,
              dynamicBullets: true,
            }}
            autoplay={{
              delay: 3000,
              disableOnInteraction: false,
              pauseOnMouseEnter: true,
            }}
            className="w-full py-8"
          >
            {(frequency.value === 'ongrid' ? ongridTiers : hybridTiers).map((tier) => (
              <SwiperSlide 
                key={tier.id}
                className="!w-[320px] pt-4 pb-8 h-full"
              >
                <div
                  className={classNames(
                    tier.mostPopular 
                      ? `ring-2 ${
                          frequency.value === 'ongrid' 
                            ? 'ring-red-600 bg-red-50' 
                            : 'ring-green-600 bg-green-50'
                        } shadow-xl relative` 
                      : `ring-1 ring-gray-200 shadow-md ${
                          frequency.value === 'ongrid'
                            ? 'hover:ring-red-200'
                            : 'hover:ring-green-200'
                        }`,
                    'rounded-3xl px-4 py-3 h-full flex flex-col',
                  )}
                >
                  {tier.mostPopular && (
                    <div className={`absolute -top-3 left-1/2 -translate-x-1/2 inline-flex items-center justify-center gap-x-1.5 rounded-full px-3 py-1 text-sm font-medium whitespace-nowrap ${
                      frequency.value === 'ongrid' ? 'bg-red-600' : 'bg-green-600'
                    } text-white`}>
                      <FireIcon className="h-4 w-4" />
                      B√°n ch·∫°y
                    </div>
                  )}
                  <h3
                    id={tier.id}
                    className={classNames(
                      tier.mostPopular ? frequency.value === 'ongrid' ? 'text-red-600' : 'text-green-600' : 'text-gray-900',
                      'text-base/7 font-semibold py-2 text-center'  ,
                    )}
                  >
                   
                    {frequency.value === 'ongrid' ? 'H·ªá On-Grid' : 'H·ªá Hybrid'} {tier.name}
                  </h3>
                  <div className="mt-2 flex gap-x-2">
                    <button 
                      className={classNames(
                        'flex-1 rounded-lg px-2 py-1',
                        'flex items-center gap-x-2',
                        'transition-all duration-200',
                        frequency.value === 'ongrid' 
                          ? 'bg-red-50 hover:bg-red-100' 
                          : 'bg-green-50 hover:bg-green-100'
                      )}
                    >
                      <ClockIcon 
                        className={`h-5 w-5 ${
                          frequency.value === 'ongrid' ? 'text-red-500' : 'text-green-500'
                        }`}
                      />
                      <div className="flex flex-col items-start">
                        <span className="text-xs text-gray-500">Ho√†n v·ªën</span>
                        <p className={`text-sm font-semibold ${
                          frequency.value === 'ongrid' ? 'text-red-600' : 'text-green-600'
                        }`}>
                          {tier.hoiVon.replace('Ho√†n v·ªën: ', '')}
                        </p>
                      </div>
                    </button>
                    
                    <button 
                      className={classNames(
                        'flex-1 rounded-lg px-2 py-1',
                        'flex items-center gap-x-2',
                        'transition-all duration-200',
                        frequency.value === 'ongrid' 
                          ? 'bg-red-50 hover:bg-red-100' 
                          : 'bg-green-50 hover:bg-green-100'
                      )}
                    >
                      <SparklesIcon 
                        className={`h-5 w-5 ${
                          frequency.value === 'ongrid' ? 'text-red-500' : 'text-green-500'
                        }`}
                      />
                      <div className="flex flex-col items-start">
                        <span className="text-xs text-gray-500">Hi·ªáu qu·∫£/th√°ng</span>
                        <p className={`text-sm font-semibold ${
                          frequency.value === 'ongrid' ? 'text-red-600' : 'text-green-600'
                        }`}>
                          {tier.hieuQua.replace('Hi·ªáu qu·∫£/th√°ng: ', '')}
                        </p>
                      </div>
                    </button>
                  </div>
                  <p className="mt-6 flex flex-col items-center">
                    <span className="text-sm text-gray-500">Gi√° ni√™m y·∫øt T{priceMonth}</span>
                    <span className="flex items-baseline gap-x-1">
                      <span className={classNames(
                        "text-4xl font-semibold tracking-tight",
                        frequency.value === 'ongrid' ? 'text-red-600' : 'text-green-600'
                      )}>
                        {tier.price}
                      </span>
                      <span className="text-base/7 font-semibold text-gray-600">{frequency.priceSuffix}</span>
                    </span>
                  </p>
                  <a
                    href={tier.href}
                    aria-describedby={tier.id}
                    className={classNames(
                      tier.mostPopular
                        ? `${frequency.value === 'ongrid' 
                            ? 'bg-red-600 text-white hover:bg-red-500 hover:scale-105 hover:shadow-lg'
                            : 'bg-green-600 text-white hover:bg-green-500 hover:scale-105 hover:shadow-lg'}`
                        : `${frequency.value === 'ongrid'
                            ? 'text-red-600 ring-1 ring-red-200 hover:bg-red-50 hover:ring-red-300 hover:scale-105'
                            : 'text-green-600 ring-1 ring-green-200 hover:bg-green-50 hover:ring-green-300 hover:scale-105'}`,
                      'mt-6 block rounded-md px-3 py-2 text-center text-sm/6 font-semibold',
                      'transform transition-all duration-200 ease-in-out',
                      'focus-visible:outline-2 focus-visible:outline-offset-2',
                      frequency.value === 'ongrid' ? 'focus-visible:outline-red-600' : 'focus-visible:outline-green-600'
                    )}
                  >
                    Xem chi ti·∫øt
                  </a>
                  <div className="flex-grow">
                    <ul role="list" className="mt-8 space-y-3 text-base/7 text-gray-600">
                      {tier.features.map((feature) => {
                        let Icon = Cog6ToothIcon // default icon
                        
                        // Ch·ªçn icon d·ª±a v√†o n·ªôi dung c·ªßa feature
                        if (feature.toLowerCase().includes('c√¥ng su·∫•t')) {
                          Icon = BoltIcon // ‚ö° C√¥ng su·∫•t
                        } else if (feature.toLowerCase().includes('h·ªá ƒëi·ªán')) {
                          Icon = BuildingOfficeIcon // üè¢ H·ªá ƒëi·ªán
                        } else if (feature.toLowerCase().includes('s·∫£n l∆∞·ª£ng')) {
                          Icon = ChartBarIcon // üìä S·∫£n l∆∞·ª£ng
                        } else if (feature.toLowerCase().includes('ho√†n v·ªën')) {
                          Icon = BanknotesIcon // üí∞ Ho√†n v·ªën
                        } else if (feature.toLowerCase().includes('di·ªán t√≠ch')) {
                          Icon = Square3Stack3DIcon // üìè Di·ªán t√≠ch
                        } else if (feature.toLowerCase().includes('pin')) {
                          Icon = Battery100Icon // üîã Pin l∆∞u tr·ªØ
                        } else if (feature.toLowerCase().includes('hi·ªáu su·∫•t')) {
                          Icon = ArrowTrendingUpIcon // üìà Hi·ªáu su·∫•t
                        } else if (feature.toLowerCase().includes('thi·∫øt b·ªã')) {
                          Icon = WrenchScrewdriverIcon // üîß Thi·∫øt b·ªã
                        }

                        return (
                          <li key={feature} className="flex gap-x-3 items-center">
                            <Icon 
                              aria-hidden="true" 
                              className={`h-5 w-5 flex-none ${frequency.value === 'ongrid' ? 'text-red-600' : 'text-green-600'}`} 
                            />
                            {feature}
                          </li>
                        )
                      })}
                    </ul>
                  </div>
                </div>
              </SwiperSlide>
            ))}
          </Swiper>
        </div>
      </div>
    </div>
  )
}
